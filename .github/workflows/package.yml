on: [push, pull_request]
name: Test & publish
jobs:
  test:
    strategy:
      matrix:
        python-version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13-dev'
        - 'pypy-3.8'
        - 'pypy-3.9'
        - 'pypy-3.10'
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run tests
        run: |
          ./tests/run.sh
  check: # group all `test (*)` workflows into one for the required status check
    needs: test
    if: ${{ always() && !contains(needs.*.result, 'cancelled') }}
    runs-on: ubuntu-latest
    steps:
      - run: ${{ contains(needs.*.result, 'failure') && 'false' || 'true' }}
  publish:
    needs: check
    runs-on: ubuntu-latest
    environment: publish
    permissions:
      id-token: write
    steps:
    - name: Check out source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        pip install build
    - name: Build wheel
      run: |
        python -m build -w
    - name: Publish wheel to Test PyPI
      if: github.event_name == 'push' && github.event.ref == 'refs/heads/develop'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
    - name: Publish wheel to PyPI
      if: github.event_name == 'push' && github.event.ref == 'refs/heads/release'
      uses: pypa/gh-action-pypi-publish@release/v1
  release:
    needs: check
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, 'autorelease') && github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PUSH_TOKEN }}
          fetch-depth: 0 # fetch the release branch as well
      - name: Update release branch
        run: |
          git push origin develop:release
